[{"path":"https://hypebright.github.io/gsapy/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 gsapy authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hypebright.github.io/gsapy/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Veerle Eeftink - van Leemput. Author, maintainer.","code":""},{"path":"https://hypebright.github.io/gsapy/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eeftink - van Leemput V (2025). gsapy: 'Shiny' interface GSAP JavaScript animations. R package version 0.0.0.9000, https://hypebright.github.io/gsapy/.","code":"@Manual{,   title = {gsapy: 'Shiny' interface for GSAP JavaScript animations},   author = {Veerle {Eeftink - van Leemput}},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://hypebright.github.io/gsapy/}, }"},{"path":"https://hypebright.github.io/gsapy/index.html","id":"gsapy","dir":"","previous_headings":"","what":"Shiny interface for GSAP JavaScript animations","title":"Shiny interface for GSAP JavaScript animations","text":"R Shiny interface GSAP – wildly robust JavaScript animations ✨","code":""},{"path":"https://hypebright.github.io/gsapy/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Shiny interface for GSAP JavaScript animations","text":"can install development version gsapy GitHub :","code":"pak::pak(\"hypebright/gsapy\")"},{"path":"https://hypebright.github.io/gsapy/index.html","id":"animations","dir":"","previous_headings":"","what":"Animations","title":"Shiny interface for GSAP JavaScript animations","text":"gsapy can bring GSAP animations Shiny elements without JavaScript knowledge. aim provide R interface common simple GSAP animations. Currently support following animations: can expect future? Animations different triggers: click, hover possibly events animations, like carousel, parallax, anything else seems fun Animations (freely available) GSAP plugins tailored/advanced animations: defining tweens timelines using JS","code":""},{"path":"https://hypebright.github.io/gsapy/index.html","id":"using-gsapy","dir":"","previous_headings":"","what":"Using gsapy","title":"Shiny interface for GSAP JavaScript animations","text":"add animation, can call withGsapy Shiny UI. function takes element, tagList elements, animation argument. ’s example can use gsapy animate multiple div elements fadeIn animation: Updating server side also possible using id argument: examples work plain divs, can also apply animations elements like card blisb. complete demo can found inst/examples/01-gsapy-scrolltrigger-cards.R.","code":"library(shiny) library(bslib) library(gsapy)  ui <- page_fillable(   title = \"gsap scroll adventures\",   withGsapy(     id = \"divs\",     animation = \"fadeIn\",     lapply(1:10, function(i) {       # simple div with header and random image       div(         h3(paste0(\"Beatiful image \", i)),         img(src = paste0(\"https://picsum.photos/600/300?random=\", i))       )     })   ) )  server <- function(input, output, session) {}  shinyApp(ui, server) library(shiny) library(bslib) library(gsapy)  ui <- page_fillable(   title = \"gsap scroll adventures\",   # animation options   selectInput(\"animation\", \"Choose animation\",               choices = c(\"fadeIn\", \"zoomIn\", \"accordion\", \"slideIn\"),               selected = \"fadeIn\"),   withGsapy(     id = \"divs\",     animation = \"fadeIn\",     lapply(1:10, function(i) {       # simple div with header and random image       div(         h3(paste0(\"Beatiful image \", i)),         img(src = paste0(\"https://picsum.photos/600/300?random=\", i))       )     })   ) )  server <- function(input, output, session) {    observe({     updateGsapy(\"divs\", input$animation)   }) |> bindEvent(input$animation, ignoreInit = TRUE)  }  shinyApp(ui, server)"},{"path":"https://hypebright.github.io/gsapy/index.html","id":"licensing","dir":"","previous_headings":"","what":"Licensing","title":"Shiny interface for GSAP JavaScript animations","text":"R package provides R interface GSAP (GreenSock Animation Platform). package licensed MIT License, meaning free use, modify, distribute permissive terms. However, GSAP licensing requirements must comply using package: GSAP free use cases, including personal projects non-commercial applications. use GSAP commercial product customers pay access animations, may need GreenSock Club membership paid license. full details, please review GSAP licensing terms. using package, acknowledge grant license GSAP . responsible ensuring compliance GSAP’s terms integrating projects. Interested GSAP doesn’t use MIT license? can read .","code":""},{"path":"https://hypebright.github.io/gsapy/reference/add_gsapy_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"gsapy dependencies utils — add_gsapy_deps","title":"gsapy dependencies utils — add_gsapy_deps","text":"function attaches gsapy dependencies given tag","code":""},{"path":"https://hypebright.github.io/gsapy/reference/add_gsapy_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gsapy dependencies utils — add_gsapy_deps","text":"","code":"add_gsapy_deps(tag)"},{"path":"https://hypebright.github.io/gsapy/reference/add_gsapy_deps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gsapy dependencies utils — add_gsapy_deps","text":"tag Element attach dependencies.","code":""},{"path":"https://hypebright.github.io/gsapy/reference/updateGsapy.html","id":null,"dir":"Reference","previous_headings":"","what":"Update GSAP animation — updateGsapy","title":"Update GSAP animation — updateGsapy","text":"can use function server side change animation effect, example fadeIn zoomIn.","code":""},{"path":"https://hypebright.github.io/gsapy/reference/updateGsapy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update GSAP animation — updateGsapy","text":"","code":"updateGsapy(id, animation, session = shiny::getDefaultReactiveDomain())"},{"path":"https://hypebright.github.io/gsapy/reference/updateGsapy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update GSAP animation — updateGsapy","text":"id id GSAP animation update. animation new animation apply. Currently supported \"fadeIn\": Fade elements appear viewport scroll, fade elements disappear viewport. \"zoomIn\": Zoom (scale) elements appear viewport scroll, zoom elements disappear viewport.","code":""},{"path":"https://hypebright.github.io/gsapy/reference/useGsapy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add gsapy dependencies — useGsapy","title":"Add gsapy dependencies — useGsapy","text":"Add gsapy dependencies","code":""},{"path":"https://hypebright.github.io/gsapy/reference/useGsapy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add gsapy dependencies — useGsapy","text":"","code":"useGsapy()"},{"path":"https://hypebright.github.io/gsapy/reference/useGsapy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add gsapy dependencies — useGsapy","text":"tagList gsapy dependencies","code":""},{"path":"https://hypebright.github.io/gsapy/reference/withGsapy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add GSAP animation to given element(s) — withGsapy","title":"Add GSAP animation to given element(s) — withGsapy","text":"Choose range built-animations create custom animations GSAP.","code":""},{"path":"https://hypebright.github.io/gsapy/reference/withGsapy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add GSAP animation to given element(s) — withGsapy","text":"","code":"withGsapy(element, id = NULL, animation = \"fadeIn\", loop = FALSE, duration = 1)"},{"path":"https://hypebright.github.io/gsapy/reference/withGsapy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add GSAP animation to given element(s) — withGsapy","text":"element UI element animate id Optional id attach element GSAP animation. id stored data attribute element can used target element custom JavaScript code. animation Name animation apply. Currently supported \"fadeIn\": Fade elements appear viewport scroll, fade elements disappear viewport. \"zoomIn\": Zoom (scale) elements appear viewport scroll, zoom elements disappear viewport. loop Boolean indicating whether animation repeat one-duration Duration animation seconds","code":""}]
