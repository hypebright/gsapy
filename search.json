[{"path":"https://hypebright.github.io/gsapy/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 gsapy authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hypebright.github.io/gsapy/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Veerle Eeftink - van Leemput. Author, maintainer.","code":""},{"path":"https://hypebright.github.io/gsapy/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eeftink - van Leemput V (2025). gsapy: 'Shiny' interface GSAP JavaScript animations. R package version 0.0.0.9000, https://hypebright.github.io/gsapy/.","code":"@Manual{,   title = {gsapy: 'Shiny' interface for GSAP JavaScript animations},   author = {Veerle {Eeftink - van Leemput}},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://hypebright.github.io/gsapy/}, }"},{"path":"https://hypebright.github.io/gsapy/index.html","id":"gsapy-","dir":"","previous_headings":"","what":"Shiny interface for GSAP JavaScript animations","title":"Shiny interface for GSAP JavaScript animations","text":"R Shiny interface GSAP ‚Äì wildly robust JavaScript animations ‚ú® want create awesome UI UX animations Shiny applications without understanding timelines, tweens, writing JavaScript matter? Hey, gsapy üëã! package provides simple elegant way integrate GSAP (GreenSock Animation Platform) animations Shiny apps.","code":""},{"path":"https://hypebright.github.io/gsapy/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Shiny interface for GSAP JavaScript animations","text":"can install development version gsapy GitHub :","code":"pak::pak(\"hypebright/gsapy\")"},{"path":"https://hypebright.github.io/gsapy/index.html","id":"animations","dir":"","previous_headings":"","what":"Animations","title":"Shiny interface for GSAP JavaScript animations","text":"gsapy can bring GSAP animations Shiny elements without JavaScript knowledge. aim provide R interface common simple GSAP animations. Currently support following animations: can expect future? Animations different triggers: click, hover possibly events animations, like carousel, parallax, anything else seems fun Animations (freely available) GSAP plugins tailored/advanced animations: defining tweens timelines using JS","code":""},{"path":"https://hypebright.github.io/gsapy/index.html","id":"using-gsapy","dir":"","previous_headings":"","what":"Using gsapy","title":"Shiny interface for GSAP JavaScript animations","text":"add animation, can call withGsapy Shiny UI. function takes element, tagList elements, animation argument. ‚Äôs example can use gsapy animate multiple div elements fadeIn animation: Updating server side also possible using id argument: examples work plain divs, can also apply animations elements like card blisb. complete demo can found inst/examples/01-gsapy-scrolltrigger-cards.R. Besides animating divs, can also animate text. example, can use waveText animation create wave effect text. ‚Äôs example use text animations:","code":"library(shiny) library(bslib) library(gsapy)  ui <- page_fillable(   title = \"gsap scroll adventures\",   withGsapy(     id = \"divs\",     animation = \"fadeIn\",     lapply(1:10, function(i) {       # simple div with header and random image       div(         h3(paste0(\"Beatiful image \", i)),         img(src = paste0(\"https://picsum.photos/600/300?random=\", i))       )     })   ) )  server <- function(input, output, session) {}  shinyApp(ui, server) library(shiny) library(bslib) library(gsapy)  ui <- page_fillable(   title = \"gsap scroll adventures\",   # animation options   selectInput(\"animation\", \"Choose animation\",               choices = c(\"fadeIn\", \"zoomIn\", \"stack\", \"slideIn\"),               selected = \"fadeIn\"),   withGsapy(     id = \"divs\",     animation = \"fadeIn\",     lapply(1:10, function(i) {       # simple div with header and random image       div(         h3(paste0(\"Beatiful image \", i)),         img(src = paste0(\"https://picsum.photos/600/300?random=\", i))       )     })   ) )  server <- function(input, output, session) {    observe({     updateGsapy(\"divs\", input$animation)   }) |> bindEvent(input$animation, ignoreInit = TRUE)  }  shinyApp(ui, server) library(shiny) library(bslib) library(gsapy)  ui <- page_fillable(   title = \"GSAP text adventures\",   # animation options   layout_column_wrap(     width = 1/2,     max_height = \"50px\",     selectInput(\"animation\", \"Choose animation\",                 choices = c(\"waveText\", \"fadeInText\", \"flipInText\"),                 selected = \"waveText\"),     tagAppendAttributes(       style = \"margin-top: 25px\",       actionButton(\"run_again\", \"Run again\")     )   ),   withGsapy(     id = \"paragraphs\",     animation = \"waveText\",     # random text paragraph with heading     div(       h2(\"Paragraph 1\"),       p(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.         Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.         Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.         Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\")     ),   ),   p(\"Other content\") )  server <- function(input, output, session) {    observe({     updateGsapy(\"paragraphs\", input$animation)   }) |> bindEvent(input$run_again, ignoreInit = TRUE)  }  shinyApp(ui, server)"},{"path":"https://hypebright.github.io/gsapy/index.html","id":"licensing","dir":"","previous_headings":"","what":"Licensing","title":"Shiny interface for GSAP JavaScript animations","text":"R package provides R interface GSAP (GreenSock Animation Platform). package licensed MIT License, meaning free use, modify, distribute permissive terms. October 2024, GSAP got acquired Webflow, popular web design platform. Despite acquisition, GSAP continue publicly available developers, GSAP team continue maintain improve library. aim GSAP continues go-toolset web animators everywhere. even got better‚Ä¶ GSAP version 3.13, released April 2025, significant changes licensing model. GSAP now 100% FREE including bonus plugins like SplitText, MorphSVG, others exclusively available Club GSAP members, even commercial use! ü•≥ license used standard ‚ÄúCharge‚Äù license. information can check announcement new licensing page. means: unlimited GSAP powered animations website app! gsapy means can use GSAP plugins without restrictions. expect animations future! üéâ","code":""},{"path":"https://hypebright.github.io/gsapy/reference/add_gsapy_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"gsapy dependencies utils ‚Äî add_gsapy_deps","title":"gsapy dependencies utils ‚Äî add_gsapy_deps","text":"function attaches gsapy dependencies given tag","code":""},{"path":"https://hypebright.github.io/gsapy/reference/add_gsapy_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gsapy dependencies utils ‚Äî add_gsapy_deps","text":"","code":"add_gsapy_deps(tag)"},{"path":"https://hypebright.github.io/gsapy/reference/add_gsapy_deps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gsapy dependencies utils ‚Äî add_gsapy_deps","text":"tag Element attach dependencies.","code":""},{"path":"https://hypebright.github.io/gsapy/reference/updateGsapy.html","id":null,"dir":"Reference","previous_headings":"","what":"Update GSAP animation ‚Äî updateGsapy","title":"Update GSAP animation ‚Äî updateGsapy","text":"can use function server side change animation effect, example fadeIn zoomIn.","code":""},{"path":"https://hypebright.github.io/gsapy/reference/updateGsapy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update GSAP animation ‚Äî updateGsapy","text":"","code":"updateGsapy(id, animation, session = shiny::getDefaultReactiveDomain())"},{"path":"https://hypebright.github.io/gsapy/reference/updateGsapy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update GSAP animation ‚Äî updateGsapy","text":"id id GSAP animation update. animation new animation apply. Currently supported \"fadeIn\": Fade elements appear viewport scroll, fade elements disappear viewport. \"zoomIn\": Zoom (scale) elements appear viewport scroll, zoom elements disappear viewport. \"stack\": Stack elements disappear viewport. \"slideIn\": Slide elements appear viewport scroll, slide elements disappear viewport. \"waveText\": Reveal characters wave effect. \"fadeInText\": Fade text words.","code":""},{"path":"https://hypebright.github.io/gsapy/reference/useGsapy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add gsapy dependencies ‚Äî useGsapy","title":"Add gsapy dependencies ‚Äî useGsapy","text":"Add gsapy dependencies","code":""},{"path":"https://hypebright.github.io/gsapy/reference/useGsapy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add gsapy dependencies ‚Äî useGsapy","text":"","code":"useGsapy()"},{"path":"https://hypebright.github.io/gsapy/reference/useGsapy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add gsapy dependencies ‚Äî useGsapy","text":"tagList gsapy dependencies","code":""},{"path":"https://hypebright.github.io/gsapy/reference/withGsapy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add GSAP animation to given element(s) ‚Äî withGsapy","title":"Add GSAP animation to given element(s) ‚Äî withGsapy","text":"Choose range built-animations create custom animations GSAP.","code":""},{"path":"https://hypebright.github.io/gsapy/reference/withGsapy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add GSAP animation to given element(s) ‚Äî withGsapy","text":"","code":"withGsapy(element, id = NULL, animation = \"fadeIn\", loop = FALSE, duration = 1)"},{"path":"https://hypebright.github.io/gsapy/reference/withGsapy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add GSAP animation to given element(s) ‚Äî withGsapy","text":"element UI element animate id Optional id attach element GSAP animation. id stored data attribute element can used target element custom JavaScript code. animation Name animation apply. Currently supported \"fadeIn\": Fade elements appear viewport scroll, fade elements disappear viewport. \"zoomIn\": Zoom (scale) elements appear viewport scroll, zoom elements disappear viewport. \"stack\": Stack elements disappear viewport. \"slideIn\": Slide elements appear viewport scroll, slide elements disappear viewport. \"waveText\": Reveal characters wave effect. \"fadeInText\": Fade text words. loop Boolean indicating whether animation repeat one-duration Duration animation seconds","code":""},{"path":"https://hypebright.github.io/gsapy/reference/withGsapy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add GSAP animation to given element(s) ‚Äî withGsapy","text":"","code":"library(shiny) #> Error in library(shiny): there is no package called ‚Äòshiny‚Äô library(bslib) #>  #> Attaching package: ‚Äòbslib‚Äô #> The following object is masked from ‚Äòpackage:utils‚Äô: #>  #>     page library(gsapy)  ui <- page_fillable(   title = \"GSAP scroll adventures\",   # animation options   selectInput(\"animation\", \"Choose animation\",               choices = c(\"fadeIn\", \"zoomIn\", \"stack\", \"slideIn\"),               selected = \"fadeIn\"),   withGsapy(     id = \"divs\",     animation = \"fadeIn\",     lapply(1:10, function(i) {       # simple div with header and random image       div(         h3(paste0(\"Beatiful image \", i)),         img(src = paste0(\"https://picsum.photos/600/300?random=\", i))       )     })   ),   p(\"Other content\") ) #> Error in loadNamespace(x): there is no package called ‚Äòshiny‚Äô  server <- function(input, output, session) {    observe({     updateGsapy(\"divs\", input$animation)   }) |> bindEvent(input$animation, ignoreInit = TRUE)  }  shinyApp(ui, server) #> Error in shinyApp(ui, server): could not find function \"shinyApp\""}]
